/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

//Encoder Support
//Alps Alpine EC11N1524402: 30 Detent, 15PPR, 2 Channel, Quadrature, 15000 Cycle

/ {
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <30>;
    };
};

/ {
    macros {
        // System and Power
        // Microphones
        // Browser Controls
        //Unicode Special Characters
        //Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1
        //Symbols       
        //IPA
        //Diacritical Characters
        // Fractions
        // Operators
    };
};

//Combos, note that key listing is zero indexed
//lshift: 36
//rshift: 49

/ {
    combos {
        compatible = "zmk,combos";

        // Characters
        // Fractions
        // Operators

        br1 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        br2 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 19>;
        };

        br3 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 29>;
        };

        br4 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <30 31>;
        };

        br5 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <40 41>;
        };

        br6 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 45>;
        };

        su {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 16>;
        };

        su1 {
            bindings = <&kp EQUAL>;
            key-positions = <19 20>;
        };

        min {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
        };

        pl {
            bindings = <&kp PLUS>;
            key-positions = <31 32>;
        };

        or {
            bindings = <&kp PIPE>;
            key-positions = <39 40>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <45 46>;
        };

        bs {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <22 23>;
        };

        bs1 {
            bindings = <&kp PIPE>;
            key-positions = <34 35>;
        };

        sl {
            bindings = <&kp SLASH>;
            key-positions = <48 49>;
        };
    };
};

// Mod Morphs, Encoder, Tap-Dances

/ {
    behaviors {
        // Mod Morph
        // RGB
        // System Functions  
        // Special Characters - Capitalizations
        // Special Characters - Other
        // Encoder
        // Tap Dance

        ud_scroll: ud_scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "UD_SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        };

        rl_scroll: rl_scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RL_SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   | DEL   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | CAPS  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |MUTE SPK|  |ClS  TAB|  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE  | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC         &kp N1  &kp N2     &kp N3        &kp N4        &kp N5                                  &kp N6  &kp N7     &kp N8     &kp N9      &kp N0    &kp BACKSPACE
&kp GRAVE       &kp Q   &kp W      &kp E         &kp R         &kp T                                   &kp Y   &kp U      &kp I      &kp O       &kp P     &kp LEFT_BRACKET
&kp TAB         &kp A   &kp S      &kp D         &kp F         &kp G                                   &kp H   &kp J      &kp K      &kp L       &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X      &kp C         &kp V         &kp B   &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N   &kp M      &kp COMMA  &kp DOT     &kp FSLH  &kp RIGHT_BRACKET
                        &kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mo 1   &kp SPACE     &kp ENTER         &mo 2   &kp MINUS  &kp EQUAL  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>, <&ud_scroll>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | HUE+ |  =  |   /   |   *  |   -   | EFF+ |
            // |BRI+ | PSCR | INS  |   ↑   |   @   |   %  |                | HUE- |  7  |   8   |   9  |   +   | BKSP |
            // |BRI- | RGB  |  ←   |   ↓   |   →   |   $  |                | SAT+ |  4  |   5   |   6  |   +   | SPD+ |
            // |TASK |BT/USB|      |  PREV |  NEXT |   #  |PL/PS |  |      | SAT- |  1  |   2   |   3  | ENTER | SPD- |
            //              |      |       |       |      |      |  |      |  0   |  0  |   0   |   .  |

            bindings = <
&kp F12   &kp F1           &kp F2        &kp F3        &kp F4        &kp F5                                        &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&trans    &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                  &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp NUMBER_0           &kp PIPE
&kp CLCK  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR    &kp PERCENT                                   &kp COLON     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&trans    &none            &none         &none         &none         &mkp MCLK     &kp C_MUTE    &kp C_PLAY_PAUSE  &none         &none          &none         &none                 &none                  &kp SLASH
                           &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans         &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |    F1 |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |       |  `  |  ~  |  <   |  >   |  ?   |                   |  *   |  {    |  }    | HOME |  END  |       |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  _   |  (    |  )    |  ;   |   |   | COLOR |
            // |       |  =  |  -  |  +   |  &   |  |   |  RGB   |  |       |  ^   |  [    |  ]    |  :   |   \   | POWER |
            //               |     |      |      |      |  CODE  |  |       |      |       |       |      |

            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                                     &kp PAGE_UP    &none           &none         &none      &none    &kp DEL
&trans  &bt BT_CLR       &none            &out OUT_TOG     &none         &kp LG(LS(S))                                    &kp PAGE_DOWN  &none           &kp UP_ARROW  &none      &none    &kp BACKSPACE
&trans  &rgb_ug RGB_BRD  &none            &rgb_ug RGB_BRI  &none         &kp PRINTSCREEN                                  &kp HOME       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp END  &none
&trans  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none         &none            &kp C_MUTE    &kp C_PLAY_PAUSE  &none          &none           &none         &none      &none    &none
                         &trans           &trans           &trans        &trans           &trans        &trans            &trans         &trans          &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>, <&rl_scroll>;
        };
    };
};
